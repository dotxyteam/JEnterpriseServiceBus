- strategy: 
	. focus on an original main feature and make it work
	. implement quickly and minimally all the other features
	. release a first version
	. advertise
	. improve the features
- add general activities:
	. Log
	. ...
- allow to start plan execution on event (timer, file poller, etc)
- add other built-in activities (file, jdbc, jms, data format, ...)
- to ease co-working and version control, plans and resources must be stored in separate files  
- allow to deploy and execute a project outside of the designer in a production environment
- improve the UI design:
	. change the font look and feel (maybe the windows look and feel would be good)
	. change the fonts ???
	. add a banner ???
- allow to add debug breakpoints
- allow to optimize a debug session by:
	. disabling animations
	. disabling the step occurrences collection
	. disabling all breakpoints
- add a binary type (maybe an alias of byte[]) for structure elements
- add buttons/tools to delete/copy/cut/paste/selectAll plan elements
- use the same structure (list or array) for structure multiple elements 
and loop results
- create and use TypeInfoProvider.getClass(ITypeInfo)
- allow to monitor the execution of deployed projects
- allow to extend the framework by adding custom activities
- allow to specify custom activity builder UI details through the code
- allow to access step error variables
- error marker do not disappear when deselecting and selecting a plan while
ExecutePlan.inputBuilder is filled
- allow to copy/cut/paste assets
- InstanceBuilder misses 'with var'
- InstanceBuilder: new var names not chosen according preceding steps
- check that running the debugger does not affect the modification stack
- diagram improvements:
	. connections are not straight and nice ???
- plain/function mode as a toggle button ???
- prevent or warn about multiply defined transitions
- manage renamings
- what if 2 variables have the same name ?
- replace "Edit..." by an icon ???
- add support to Iterable for ListItemReplication.iterationListValue
- alternatives: 
https://www.reddit.com/r/Talend/comments/19cvxwf/talend_open_source_is_being_discontinued/
- adjust selection after a case (switch) is moved down/up
- integrated log window (console)
- allow to change default PathExplorer node type (it should generate a cast expression)
- diagram improvements:
	. zoom
- Switch/Cases feature issues:
	. should not allow to remove all switch/cases managed elements ???
- generate expressions that do not crash because of a null pointer ???
- allow to trace errors origin
- add XML/JSON support
	. generate automatically classes from schemas to parse and render ???
- allow to serve/call rest/soap web services
- add connectors for:
	. JMS
	. Kafka
- JDBCConnection:
	. driver jars location ???
- comment the code
- offer windows and linux versions
- change the JRE/JDK: use OpenJDK or ...
- improve JDBCQueryActivity:
	. check parameter type mappings
	. can generate automatically parameter definitions ???
	. should automatically retrieve result columns ???
- some modifications can disappear from the UI when 
InstanceBuilder.(className|selectedConstructorSignature) are modified. It may be better
to display incoherent nodes with an error marker