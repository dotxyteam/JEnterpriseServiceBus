- integrated log window (console)
- starting a process in the debugger marks the solution as modified (to be saved) 
- allow to change default PathExplorer node type (it should generate a cast expression)
- smaller diagram node images
- diagram zoom
- diagram improvements:
	. allow to select the current mouse action between MOVE and CONNECT
	. do not move systematically to the mouse pointer position 
- ListItemInitializer:
	- ListItemReplication/iterationListValue/itemType not resolved
	- add ListItemInitializer.replication.itemTypeName. It will allow to check
the replication list value function and other functions that use the replication
item variable
- Switch/Cases feature issues:
	. should not allow to remove all switch/cases managed elements ???
- split classes GUI, Plan, Debugger ???
- control InstanceBuilder.typeName updates ??? (the new type should inherit from the
normal type)
- InstanceBuilder design issues:
	. InstanceBuilder misses these features: 'with', 'auto map'
	=) the InstanceBuilder should be equivalent to the TIBCO BW mapper. It should
	offer as much transformation specification capabilities. Actually a BW mapper
	obtains its power from a subset of XSLT. It allows to specify how to build an 
	XML document while the InstanceBuilder allows to specify how to build an Java
	object. It should then be possible to have as much power in an InstanceBuilder
	than in a BW mapper. 
- rename activity classes (remove 'Activity' suffix) ???
- wrap function editor lines ???
- generate expressions that do not crash because of a null pointer ???
- allow to trace errors origin
- add XML/JSON support
	. generate automatically classes from schemas to parse and render ???
- allow to serve/call rest/soap web services
- allow to provide plan input through the debugger
- create and display a PlanExecutor for each sub-plan execution
- Structure.Element.multiple= true should generate a list instead of an array ???
- allow to build and reference shared structures
- UI improvements:
	. banner ???
- JDBCConnection:
	. driver jars location ???
- strategy: 
	. focus on an original main feature and make it work
	. implement quickly and minimally all the other features
	. release a first version
	. advertise
	. improve the features
- allow to drag and drop PathExplorer node to the expression editor
- allow to map fields graphically :
	- add a value column to InstanceBuilder tree 
	- add a path explorer tree to InstanceBuilder component
	- allow to drag and drop from path explorer tree to InstanceBuilder tree 
- add things like groups (for repetition, etc) and conditional transitions for steps
- comment the code
- add built-in activities (file, jdbc, jms, data format, .. activities)
- allow to view resources full path
- allow to start plan execution on event (timer, file poller, etc)
- allow to extend the framework by adding custom activities
- allow to deploy and execute a project outside of the designer in a production environment
- allow to monitor the execution of deployed projects
- offer windows and linux versions
- change the JRE/JDK: use OpenJDK or ...
- improve JDBCQueryActivity:
	. check parameter type mappings
	. can generate automatically parameter definitions ???
	. should automatically retrieve result columns ???
- some modifications can disappear from the UI when 
InstanceBuilder.(className|selectedConstructorSignature) are modified. It may be better
to display incoherent nodes with an error marker
- to ease co-working and version control, plans and resources must be stored in separate files  
- allow to specify custom activity builder UI details through the code
- add validation
- change the look and feel (maybe the windows look and feel would be good)