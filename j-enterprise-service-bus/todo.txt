- strategy: 
	. focus on an original main feature and make it work
	. implement quickly and minimally all the other features
	. release a first version
	. advertise
	. improve the features
- add general activities:
	. Log
	. ...
- maybe change the project name since ESBs are not popular anymore
- add other built-in activities (fail, file, jdbc, jms, data format, ...)
- allow to create profiles for each env
- it is difficult to find appropriate names for steps and structure elements 
- Limit console size
- create a basic WSDL generator
- allow to view APIs (SOAP/REST) documentation
- manage JDBC connection pools
- need to generate OperationOutput class for web services ???
- allow to deploy and execute a project outside of the designer in a production environment
- keyboard shortcuts for common actions (delete, copy/cut/paste, ...)
- allow to have a feedback of current validation job in progress
- find a better icon for 'connect' drag intent
- allow to process REST XML message payloads 
- deleting the whole solution folder before saving is risky. 
find a solution (merge files and folders ???)..  
- improve the UI design:
	. add a banner ???
	. get inspiration from TIBCO Flogo
- allow to add debug breakpoints
- add advanced HTTP server options (see https://docs.tibco.com/pub/activematrix_businessworks/6.7.0/doc/html/GUID-E7A7A6BD-20C7-496D-9F75-868B6F82FD1E.html)
- allow to add comments to plan diagrams
- allow to optimize a debug session by:
	. disabling animations
	. disabling the step occurrences collection
	. disabling all breakpoints
- allow to have special password variables
- allow totally dynamic JDBC queries 
- allow to copy/cut/paste assets
- allow to retarget a transition
- add buttons/tools to delete/copy/cut/paste/selectAll plan elements
- create and use TypeInfoProvider.getClass(ITypeInfo)
- allow to monitor the execution of deployed projects
- allow to extend the framework by adding custom activities
- allow to specify custom activity builder UI details through the code
- allow to access step error variables
- error marker do not disappear when deselecting and selecting a plan while
ExecutePlan.inputBuilder is filled
- allow to copy/cut/paste assets
- InstanceBuilder misses 'with var'
- InstanceBuilder: new var names not chosen according preceding steps
- check that running the debugger does not affect the modification stack
- diagram improvements:
	. connections are not straight and nice ???
- plain/function mode as a toggle button ???
- prevent or warn about multiply defined transitions
- manage renamings
- what if 2 variables have the same name ?
- replace "Edit..." by an icon ???
- UnexpectedError is used for exceptions that are not really related to bugs
(such as allowing to debug erroneous solution)
- add support to Iterable for ListItemReplication.iterationListValue
- alternatives: 
https://www.reddit.com/r/Talend/comments/19cvxwf/talend_open_source_is_being_discontinued/
- adjust selection after a case (switch) is moved down/up
- integrated log window (console)
- allow to change default PathExplorer node type (it should generate a cast expression)
- verify (during persistence probably) that:
	. every asset is isolated (does not have other asset reference)
	. there is no persisted inner class that hold a reference to the enclosing class instance (not sure) ???
- do System.exit() when closing the GUI to ensure there is no running thread (buggy http server, etc)
- on the debugger window, replace the plan activation check box by a button in order to
have the busy indicator
- diagram improvements:
	. zoom
- Switch/Cases feature issues:
	. should not allow to remove all switch/cases managed elements ???
- generate expressions that do not crash because of a null pointer ???
- allow to trace errors origin
- add XML/JSON support
	. generate automatically classes from schemas to parse and render ???
- allow to serve/call rest/soap web services
- add connectors for:
	. JMS
	. Kafka
- JDBCConnection:
	. driver jars location ???
- comment the code
- check dependencies vulnerabilities and change versions
- offer windows and linux versions
- change the JRE/JDK: use OpenJDK or ...
- improve JDBCQueryActivity:
	. check parameter type mappings
- some modifications can disappear from the UI when 
InstanceBuilder.(className|selectedConstructorSignature) are modified. It may be better
to display incoherent nodes with an error marker