- strategy: 
	. focus on an original main feature and make it work
	. implement quickly and minimally all the other features
	. release a first version
	. advertise
	. improve the features
- add script edition assistance:
	. allow to select a data source node that will generate a script
	. to do this:
		* modify reflection-ui:
			# to allow to bind a list selection to a field
			# to allow to disable a method invocation button when the parameters are not valid
		* create a PathNodeSelector class that will 
			# list the the PathExplorers by Step name
			# allow to select a PathNode
		* use a converter that will convert the DynamicVlaue.setCript(...) script parameter to a 
		PathNodeSelector
		* but how to provide the current Step and Plan to the PathNode Selector ?
- add XML support
	. generate automatically classes from XSD to parse and render ???
- enhance the diagram editor
- add things like groups (for repetition, etc) and conditionnal transitions for steps
- comment the code
- add built-in activities (file, jdbc, jms, data format, .. activities)
- allow to map fields graphically 
- allow to create and organize plans
- allow to create and share resources (JDBCConnection, etc)
- allow to start plan execution on event (timer, file poller, etc)
- allow to extend the framework by adding custom activities
- allow to debug
- allow to deploy and execute a project outside of the designer in a production environment
- allow to monitor the execution of deployed projects
- offer windows and linux versions
- change the JRE/JDK: use OpenJDK or ...
- improve JDBCQueryActivity:
	. dynamic result
	. check parameter type mappings
	. allow to dynamically create the statement
	. the Builder.uniqueIdentifier should not contain charcaters invalid for class name
	. can generate automatically parameter definitions ?
	. should automatically retrieve result columns
- some modifications can disappear from the UI when 
ObjectSpecification.(className|selectedConstructorSIgnature) are modified. It may be better
to display incoherent nodes with an error marker
- to ease co-working plans and resources must be stored in separate files  
- allow to specify activity builder UI details through the code
- add validation
