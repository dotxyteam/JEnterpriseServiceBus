- rename activity classes (remove 'Activity' suffix)
- wrap function editor lines ???
- diagram improvements:
	. allow to select the current mouse action between MOVE and CONNECT
	. do not move systematically to the mouse pointer position 
- generate expressions that do not crash because of a null pointer ???
- allow to trace errors origin
- allow to serve/call rest/soap web services
- allow to provide plan input through the debugger
- create and display a PlanExecutor for each sub-plan execution
- Structure.Element.multiple= true should generate a list instead of an array
- allow to build and reference shared structures
- UI improvements:
	. banner
- JDBCConnection (driver jars location ???) + driver class name should be specified 
- remove type-only nodes from PathExplorer and InstanceSpecification trees
- ListItemReplication/iterationListValue/itemType not resolved
- strategy: 
	. focus on an original main feature and make it work
	. implement quickly and minimally all the other features
	. release a first version
	. advertise
	. improve the features
- allow to drag and drop PathExplorer node to the expression editor
- add XML/JSON support
	. generate automatically classes from schemas to parse and render ???
- add things like groups (for repetition, etc) and conditional transitions for steps
- comment the code
- add built-in activities (file, jdbc, jms, data format, .. activities)
- allow to map fields graphically 
- allow to view resources full path
- allow to start plan execution on event (timer, file poller, etc)
- allow to extend the framework by adding custom activities
- allow to deploy and execute a project outside of the designer in a production environment
- allow to monitor the execution of deployed projects
- offer windows and linux versions
- change the JRE/JDK: use OpenJDK or ...
- improve JDBCQueryActivity:
	. check parameter type mappings
	. can generate automatically parameter definitions ?
	. should automatically retrieve result columns ???
- some modifications can disappear from the UI when 
ObjectSpecification.(className|selectedConstructorSignature) are modified. It may be better
to display incoherent nodes with an error marker
- to ease co-working and version control, plans and resources must be stored in separate files  
- allow to specify activity builder UI details through the code
- add validation
- change the look and feel (maybe the windows look and feel would be good)
- bug to fix: replace "$" by "." for class names where generating source code