<com.otk.jesb.PluginBuilder>
  <packageName>com.otk.jesb.activation.builtin</packageName>
  <resources/>
  <operations/>
  <activators>
    <com.otk.jesb.PluginBuilder_-ActivatorDescriptor>
      <activatorIconImageData class="null"/>
      <activatorTypeCaption>Schedule</activatorTypeCaption>
      <activatorTypeName>Schedule</activatorTypeName>
      <additionalFieldDeclarationsSourceCode>private ScheduledExecutorService scheduler;
</additionalFieldDeclarationsSourceCode>
      <additionalMethodDeclarationsSourceCode>private long periodToMilliseconds(
    long periodLength, 
    RepetitionSettingsStructure.RepetitionSettingsStructurePeriodUnitStructure periodUnit
){
    return java.util.concurrent.TimeUnit.MILLISECONDS.convert(
        periodLength, 
        java.util.Arrays.stream(
            java.util.concurrent.TimeUnit.class.getEnumConstants()
        ).filter(
            constant -&gt; constant.name().equals(periodUnit.name())
        ).findFirst().get()
    );   
}

private ScheduledFuture&lt;?&gt; setUp(
    Runnable task,
    java.util.Date start, 
    boolean repeating, 
    long periodMilliseconds,
    java.util.Date end
) {
    java.util.Date now = new java.util.Date();
    java.util.Date next;
    if(repeating){
        next = computeNextOccurrence(start, periodMilliseconds, now);
        if(end != null){
            if(end.before(next)){
                return null;
            }
        }
    }else{
        next = start;
    }
    long nowMilliseconds = now.getTime();
    long nextMilliseconds = next.getTime();
    long delayMilliseconds = nextMilliseconds - nowMilliseconds;
    return scheduler.schedule(() -&gt; {
        if(repeating){            
            setUp(task, start, repeating, periodMilliseconds, end);
        }
        task.run();
    }, delayMilliseconds, TimeUnit.MILLISECONDS);
}

private java.util.Date computeNextOccurrence(java.util.Date start, long periodMilliseconds, java.util.Date now) {
    long startMilliseconds = start.getTime();
    long nowMilliseconds = now.getTime();
    if (nowMilliseconds &lt;= startMilliseconds) {
        return start;
    }
    long elapsed = nowMilliseconds - startMilliseconds;
    long missed = (elapsed / periodMilliseconds) + 1;
    long nextMilliseconds = startMilliseconds + missed * periodMilliseconds;
    return new java.util.Date(nextMilliseconds);
}
</additionalMethodDeclarationsSourceCode>
      <attributes>
        <com.otk.jesb.PluginBuilder_-AttributeDescriptor>
          <caption>Start At</caption>
          <name>startDateTime</name>
          <nature class="com.otk.jesb.PluginBuilder$SimpleAttributeNature">
            <controlPluginConfiguration class="xy.reflect.ui.control.swing.plugin.DateTimePickerPlugin$DateTimePickerConfiguration">
              <dateFormat>yyyy-MM-dd</dateFormat>
              <timeFormat>HH:mm:ss</timeFormat>
            </controlPluginConfiguration>
            <controlPluginIdentifier>com.otk.jesb.ui.GUI$JESDDateTimePickerPlugin</controlPluginIdentifier>
            <defaultValueExpression>com.otk.jesb.meta.DateTime.now()</defaultValueExpression>
            <nullable>false</nullable>
            <typeNameOrAlias>com.otk.jesb.meta.DateTime</typeNameOrAlias>
            <variant>true</variant>
          </nature>
        </com.otk.jesb.PluginBuilder_-AttributeDescriptor>
        <com.otk.jesb.PluginBuilder_-AttributeDescriptor>
          <caption>Repeat</caption>
          <name>repeating</name>
          <nature class="com.otk.jesb.PluginBuilder$SimpleAttributeNature">
            <controlPluginConfiguration class="null"/>
            <controlPluginIdentifier class="null"/>
            <defaultValueExpression>false</defaultValueExpression>
            <nullable>false</nullable>
            <typeNameOrAlias>boolean</typeNameOrAlias>
            <variant>true</variant>
          </nature>
        </com.otk.jesb.PluginBuilder_-AttributeDescriptor>
        <com.otk.jesb.PluginBuilder_-AttributeDescriptor>
          <caption>Repetition Settings</caption>
          <name>repetitionSettings</name>
          <nature class="com.otk.jesb.PluginBuilder$GroupAttributeNature">
            <attributes>
              <com.otk.jesb.PluginBuilder_-AttributeDescriptor>
                <caption>Period Unit</caption>
                <name>periodUnit</name>
                <nature class="com.otk.jesb.PluginBuilder$EnumerationAttributeNature">
                  <controlPluginConfiguration class="null"/>
                  <controlPluginIdentifier class="null"/>
                  <defaultValueExpression>RepetitionSettingsStructurePeriodUnitStructure.DAYS</defaultValueExpression>
                  <nullable>false</nullable>
                  <structure>
                    <items>
                      <com.otk.jesb.Structure_-EnumerationItem>
                        <name>MILLISECONDS</name>
                      </com.otk.jesb.Structure_-EnumerationItem>
                      <com.otk.jesb.Structure_-EnumerationItem>
                        <name>SECONDS</name>
                      </com.otk.jesb.Structure_-EnumerationItem>
                      <com.otk.jesb.Structure_-EnumerationItem>
                        <name>MINUTES</name>
                      </com.otk.jesb.Structure_-EnumerationItem>
                      <com.otk.jesb.Structure_-EnumerationItem>
                        <name>HOURS</name>
                      </com.otk.jesb.Structure_-EnumerationItem>
                      <com.otk.jesb.Structure_-EnumerationItem>
                        <name>DAYS</name>
                      </com.otk.jesb.Structure_-EnumerationItem>
                      <com.otk.jesb.Structure_-EnumerationItem>
                        <name>MONTHS</name>
                      </com.otk.jesb.Structure_-EnumerationItem>
                      <com.otk.jesb.Structure_-EnumerationItem>
                        <name>YEARS</name>
                      </com.otk.jesb.Structure_-EnumerationItem>
                    </items>
                  </structure>
                  <variant>true</variant>
                </nature>
              </com.otk.jesb.PluginBuilder_-AttributeDescriptor>
              <com.otk.jesb.PluginBuilder_-AttributeDescriptor>
                <caption>Period Length</caption>
                <name>periodLength</name>
                <nature class="com.otk.jesb.PluginBuilder$SimpleAttributeNature">
                  <controlPluginConfiguration class="null"/>
                  <controlPluginIdentifier class="null"/>
                  <defaultValueExpression>1l</defaultValueExpression>
                  <nullable>false</nullable>
                  <typeNameOrAlias>long</typeNameOrAlias>
                  <variant>true</variant>
                </nature>
              </com.otk.jesb.PluginBuilder_-AttributeDescriptor>
              <com.otk.jesb.PluginBuilder_-AttributeDescriptor>
                <caption>End At</caption>
                <name>endDateTime</name>
                <nature class="com.otk.jesb.PluginBuilder$SimpleAttributeNature">
                  <controlPluginConfiguration class="xy.reflect.ui.control.swing.plugin.DateTimePickerPlugin$DateTimePickerConfiguration">
                    <dateFormat>yyyy-MM-dd</dateFormat>
                    <timeFormat>HH:mm:ss</timeFormat>
                  </controlPluginConfiguration>
                  <controlPluginIdentifier>com.otk.jesb.ui.GUI$JESDDateTimePickerPlugin</controlPluginIdentifier>
                  <defaultValueExpression>null</defaultValueExpression>
                  <nullable>true</nullable>
                  <typeNameOrAlias>com.otk.jesb.meta.DateTime</typeNameOrAlias>
                  <variant>true</variant>
                </nature>
              </com.otk.jesb.PluginBuilder_-AttributeDescriptor>
            </attributes>
            <nullable>false</nullable>
          </nature>
        </com.otk.jesb.PluginBuilder_-AttributeDescriptor>
      </attributes>
      <handlerFinalizationStatements>scheduler.shutdown();
scheduler.awaitTermination(Long.MAX_VALUE, TimeUnit.DAYS);
scheduler = null;</handlerFinalizationStatements>
      <handlerInitializationStatements>scheduler = Executors.newScheduledThreadPool(1);
Runnable task = new Runnable(){
	@Override
	public void run() {
		activationHandler.trigger(new InputClassStructure(com.otk.jesb.meta.DateTime.now()));
	}
};
long periodMilliseconds = periodToMilliseconds(
    repetitionSettings.periodLengthVariant.getValue(), 
    repetitionSettings.periodUnitVariant.getValue()
);
setUp(
    task,
    startDateTimeVariant.getValue().toJavaUtilDate(), 
    repeatingVariant.getValue(), 
    periodToMilliseconds(
        repetitionSettings.periodLengthVariant.getValue(), 
        repetitionSettings.periodUnitVariant.getValue()
    ),
    (repetitionSettings.getEndDateTimeVariant().getValue() == null) 
        ? null 
        : repetitionSettings.getEndDateTimeVariant().getValue().toJavaUtilDate()
);</handlerInitializationStatements>
      <importedClassNames>
        <string>java.util.concurrent.Executors</string>
        <string>java.util.concurrent.ScheduledExecutorService</string>
        <string>java.util.concurrent.ScheduledFuture</string>
        <string>java.util.concurrent.TimeUnit</string>
      </importedClassNames>
      <inputClassOption>
        <concreteStructureAlternatives class="null"/>
        <structure class="com.otk.jesb.Structure$ClassicStructure">
          <elements>
            <com.otk.jesb.Structure_-SimpleElement>
              <multiple>false</multiple>
              <name>activationMoment</name>
              <optionality class="null"/>
              <typeNameOrAlias>com.otk.jesb.meta.DateTime</typeNameOrAlias>
            </com.otk.jesb.Structure_-SimpleElement>
          </elements>
        </structure>
      </inputClassOption>
      <outputClassOption class="null"/>
      <validationMethodBody>if(repeatingVariant.getValue()){
    if(repetitionSettings.periodLengthVariant.getValue() &lt;= 0){
        throw new com.otk.jesb.ValidationError(&quot;Invalid repetition period length: &quot; + repetitionSettings.periodLengthVariant.getValue() + &quot; (positive number expected)&quot;);
    }
    if(repetitionSettings.endDateTimeVariant.getValue() != null){
        if(!repetitionSettings.endDateTimeVariant.getValue().toJavaUtilDate().after(startDateTimeVariant.getValue().toJavaUtilDate())){
            throw new com.otk.jesb.ValidationError(&quot;Invalid schedule end date/time: It is not after the schedule start date/time&quot;);
        }
        if(!repetitionSettings.endDateTimeVariant.getValue().toJavaUtilDate().after(new java.util.Date())){
            throw new com.otk.jesb.ValidationError(&quot;Invalid schedule end date/time: It has passed&quot;);
        }
    }
}else{
    if(!startDateTimeVariant.getValue().toJavaUtilDate().after(new java.util.Date())){
        throw new com.otk.jesb.ValidationError(&quot;Invalid schedule start date/time: It has passed&quot;);
    }
}</validationMethodBody>
    </com.otk.jesb.PluginBuilder_-ActivatorDescriptor>
  </activators>
</com.otk.jesb.PluginBuilder>